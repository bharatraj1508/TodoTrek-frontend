{
  "version": 3,
  "sources": ["../../../../../node_modules/tom-select/dist/esm/tom-select.complete.js"],
  "sourcesContent": ["/**\n* Tom Select v2.3.1\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events, callback) {\n  events.split(/\\s+/).forEach(event => {\n    callback(event);\n  });\n}\nclass MicroEvent {\n  constructor() {\n    this._events = void 0;\n    this._events = {};\n  }\n  on(events, fct) {\n    forEvents(events, event => {\n      const event_array = this._events[event] || [];\n      event_array.push(fct);\n      this._events[event] = event_array;\n    });\n  }\n  off(events, fct) {\n    var n = arguments.length;\n    if (n === 0) {\n      this._events = {};\n      return;\n    }\n    forEvents(events, event => {\n      if (n === 1) {\n        delete this._events[event];\n        return;\n      }\n      const event_array = this._events[event];\n      if (event_array === undefined) return;\n      event_array.splice(event_array.indexOf(fct), 1);\n      this._events[event] = event_array;\n    });\n  }\n  trigger(events, ...args) {\n    var self = this;\n    forEvents(events, event => {\n      const event_array = self._events[event];\n      if (event_array === undefined) return;\n      event_array.forEach(fct => {\n        fct.apply(self, args);\n      });\n    });\n  }\n}\n\n/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nfunction MicroPlugin(Interface) {\n  Interface.plugins = {};\n  return class extends Interface {\n    constructor(...args) {\n      super(...args);\n      this.plugins = {\n        names: [],\n        settings: {},\n        requested: {},\n        loaded: {}\n      };\n    }\n    /**\n     * Registers a plugin.\n     *\n     * @param {function} fn\n     */\n    static define(name, fn) {\n      Interface.plugins[name] = {\n        'name': name,\n        'fn': fn\n      };\n    }\n\n    /**\n     * Initializes the listed plugins (with options).\n     * Acceptable formats:\n     *\n     * List (without options):\n     *   ['a', 'b', 'c']\n     *\n     * List (with options):\n     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n     *\n     * Hash (with options):\n     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n     *\n     * @param {array|object} plugins\n     */\n    initializePlugins(plugins) {\n      var key, name;\n      const self = this;\n      const queue = [];\n      if (Array.isArray(plugins)) {\n        plugins.forEach(plugin => {\n          if (typeof plugin === 'string') {\n            queue.push(plugin);\n          } else {\n            self.plugins.settings[plugin.name] = plugin.options;\n            queue.push(plugin.name);\n          }\n        });\n      } else if (plugins) {\n        for (key in plugins) {\n          if (plugins.hasOwnProperty(key)) {\n            self.plugins.settings[key] = plugins[key];\n            queue.push(key);\n          }\n        }\n      }\n      while (name = queue.shift()) {\n        self.require(name);\n      }\n    }\n    loadPlugin(name) {\n      var self = this;\n      var plugins = self.plugins;\n      var plugin = Interface.plugins[name];\n      if (!Interface.plugins.hasOwnProperty(name)) {\n        throw new Error('Unable to find \"' + name + '\" plugin');\n      }\n      plugins.requested[name] = true;\n      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n      plugins.names.push(name);\n    }\n\n    /**\n     * Initializes a plugin.\n     *\n     */\n    require(name) {\n      var self = this;\n      var plugins = self.plugins;\n      if (!self.plugins.loaded.hasOwnProperty(name)) {\n        if (plugins.requested[name]) {\n          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n        }\n        self.loadPlugin(name);\n      }\n      return plugins.loaded[name];\n    }\n  };\n}\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\n/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate$1 = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\n/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate$1(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate$1(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate$1(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate$1(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\nconst escapeQuery = query => {\n  return query.replace(/['\"\\\\]/g, '\\\\$&');\n};\n\n/**\n * Dispatch an event\n *\n */\nconst triggerEvent = (dom_el, event_name) => {\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(event_name, true, false);\n  dom_el.dispatchEvent(event);\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nconst applyCSS = (dom_el, css) => {\n  Object.assign(dom_el.style, css);\n};\n\n/**\n * Add css classes\n *\n */\nconst addClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.add(cls);\n    });\n  });\n};\n\n/**\n * Remove css classes\n *\n */\nconst removeClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.remove(cls);\n    });\n  });\n};\n\n/**\n * Return arguments\n *\n */\nconst classesArray = args => {\n  var classes = [];\n  iterate(args, _classes => {\n    if (typeof _classes === 'string') {\n      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n    }\n    if (Array.isArray(_classes)) {\n      classes = classes.concat(_classes);\n    }\n  });\n  return classes.filter(Boolean);\n};\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nconst castAsArray = arg => {\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  return arg;\n};\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nconst parentMatch = (target, selector, wrapper) => {\n  if (wrapper && !wrapper.contains(target)) {\n    return;\n  }\n  while (target && target.matches) {\n    if (target.matches(selector)) {\n      return target;\n    }\n    target = target.parentNode;\n  }\n};\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nconst getTail = (list, direction = 0) => {\n  if (direction > 0) {\n    return list[list.length - 1];\n  }\n  return list[0];\n};\n\n/**\n * Return true if an object is empty\n *\n */\nconst isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nconst nodeIndex = (el, amongst) => {\n  if (!el) return -1;\n  amongst = amongst || el.nodeName;\n  var i = 0;\n  while (el = el.previousElementSibling) {\n    if (el.matches(amongst)) {\n      i++;\n    }\n  }\n  return i;\n};\n\n/**\n * Set attributes of an element\n *\n */\nconst setAttr = (el, attrs) => {\n  iterate(attrs, (val, attr) => {\n    if (val == null) {\n      el.removeAttribute(attr);\n    } else {\n      el.setAttribute(attr, '' + val);\n    }\n  });\n};\n\n/**\n * Replace a node\n */\nconst replaceNode = (existing, replacement) => {\n  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n};\n\n/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nconst highlight = (element, regex) => {\n  if (regex === null) return;\n\n  // convet string to regex\n  if (typeof regex === 'string') {\n    if (!regex.length) return;\n    regex = new RegExp(regex, 'i');\n  }\n\n  // Wrap matching part of text node with highlighting <span>, e.g.\n  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n  const highlightText = node => {\n    var match = node.data.match(regex);\n    if (match && node.data.length > 0) {\n      var spannode = document.createElement('span');\n      spannode.className = 'highlight';\n      var middlebit = node.splitText(match.index);\n      middlebit.splitText(match[0].length);\n      var middleclone = middlebit.cloneNode(true);\n      spannode.appendChild(middleclone);\n      replaceNode(middlebit, spannode);\n      return 1;\n    }\n    return 0;\n  };\n\n  // Recurse element node, looking for child text nodes to highlight, unless element\n  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n  const highlightChildren = node => {\n    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n      Array.from(node.childNodes).forEach(element => {\n        highlightRecursive(element);\n      });\n    }\n  };\n  const highlightRecursive = node => {\n    if (node.nodeType === 3) {\n      return highlightText(node);\n    }\n    highlightChildren(node);\n    return 0;\n  };\n  highlightRecursive(element);\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nconst removeHighlight = el => {\n  var elements = el.querySelectorAll(\"span.highlight\");\n  Array.prototype.forEach.call(elements, function (el) {\n    var parent = el.parentNode;\n    parent.replaceChild(el.firstChild, el);\n    parent.normalize();\n  });\n};\n\nconst KEY_A = 65;\nconst KEY_RETURN = 13;\nconst KEY_ESC = 27;\nconst KEY_LEFT = 37;\nconst KEY_UP = 38;\nconst KEY_RIGHT = 39;\nconst KEY_DOWN = 40;\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_TAB = 9;\nconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\nvar defaults = {\n  options: [],\n  optgroups: [],\n  plugins: [],\n  delimiter: ',',\n  splitOn: null,\n  // regexp or string for splitting up values from a paste command\n  persist: true,\n  diacritics: true,\n  create: null,\n  createOnBlur: false,\n  createFilter: null,\n  highlight: true,\n  openOnFocus: true,\n  shouldOpen: null,\n  maxOptions: 50,\n  maxItems: null,\n  hideSelected: null,\n  duplicates: false,\n  addPrecedence: false,\n  selectOnTab: false,\n  preload: null,\n  allowEmptyOption: false,\n  //closeAfterSelect: false,\n  refreshThrottle: 300,\n  loadThrottle: 300,\n  loadingClass: 'loading',\n  dataAttr: null,\n  //'data-data',\n  optgroupField: 'optgroup',\n  valueField: 'value',\n  labelField: 'text',\n  disabledField: 'disabled',\n  optgroupLabelField: 'label',\n  optgroupValueField: 'value',\n  lockOptgroupOrder: false,\n  sortField: '$order',\n  searchField: ['text'],\n  searchConjunction: 'and',\n  mode: null,\n  wrapperClass: 'ts-wrapper',\n  controlClass: 'ts-control',\n  dropdownClass: 'ts-dropdown',\n  dropdownContentClass: 'ts-dropdown-content',\n  itemClass: 'item',\n  optionClass: 'option',\n  dropdownParent: null,\n  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n  copyClassesToDropdown: false,\n  placeholder: null,\n  hidePlaceholder: null,\n  shouldLoad: function (query) {\n    return query.length > 0;\n  },\n  /*\n  load                 : null, // function(query, callback) { ... }\n  score                : null, // function(search) { ... }\n  onInitialize         : null, // function() { ... }\n  onChange             : null, // function(value) { ... }\n  onItemAdd            : null, // function(value, $item) { ... }\n  onItemRemove         : null, // function(value) { ... }\n  onClear              : null, // function() { ... }\n  onOptionAdd          : null, // function(value, data) { ... }\n  onOptionRemove       : null, // function(value) { ... }\n  onOptionClear        : null, // function() { ... }\n  onOptionGroupAdd     : null, // function(id, data) { ... }\n  onOptionGroupRemove  : null, // function(id) { ... }\n  onOptionGroupClear   : null, // function() { ... }\n  onDropdownOpen       : null, // function(dropdown) { ... }\n  onDropdownClose      : null, // function(dropdown) { ... }\n  onType               : null, // function(str) { ... }\n  onDelete             : null, // function(values) { ... }\n  */\n\n  render: {\n    /*\n    item: null,\n    optgroup: null,\n    optgroup_header: null,\n    option: null,\n    option_create: null\n    */\n  }\n};\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nconst hash_key = value => {\n  if (typeof value === 'undefined' || value === null) return null;\n  return get_hash(value);\n};\nconst get_hash = value => {\n  if (typeof value === 'boolean') return value ? '1' : '0';\n  return value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nconst escape_html = str => {\n  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n};\n\n/**\n * use setTimeout if timeout > 0 \n */\nconst timeout = (fn, timeout) => {\n  if (timeout > 0) {\n    return setTimeout(fn, timeout);\n  }\n  fn.call(null);\n  return null;\n};\n\n/**\n * Debounce the user provided load function\n *\n */\nconst loadDebounce = (fn, delay) => {\n  var timeout;\n  return function (value, callback) {\n    var self = this;\n    if (timeout) {\n      self.loading = Math.max(self.loading - 1, 0);\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(function () {\n      timeout = null;\n      self.loadedSearches[value] = true;\n      fn.call(self, value, callback);\n    }, delay);\n  };\n};\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nconst debounce_events = (self, types, fn) => {\n  var type;\n  var trigger = self.trigger;\n  var event_args = {};\n\n  // override trigger method\n  self.trigger = function () {\n    var type = arguments[0];\n    if (types.indexOf(type) !== -1) {\n      event_args[type] = arguments;\n    } else {\n      return trigger.apply(self, arguments);\n    }\n  };\n\n  // invoke provided function\n  fn.apply(self, []);\n  self.trigger = trigger;\n\n  // trigger queued events\n  for (type of types) {\n    if (type in event_args) {\n      trigger.apply(self, event_args[type]);\n    }\n  }\n};\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nconst getSelection = input => {\n  return {\n    start: input.selectionStart || 0,\n    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n  };\n};\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nconst isKeyDown = (key_name, evt) => {\n  if (!evt) {\n    return false;\n  }\n  if (!evt[key_name]) {\n    return false;\n  }\n  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n  if (count === 1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nconst getId = (el, id) => {\n  const existing_id = el.getAttribute('id');\n  if (existing_id) {\n    return existing_id;\n  }\n  el.setAttribute('id', id);\n  return id;\n};\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nconst addSlashes = str => {\n  return str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nconst append = (parent, node) => {\n  if (node) parent.append(node);\n};\n\nfunction getSettings(input, settings_user) {\n  var settings = Object.assign({}, defaults, settings_user);\n  var attr_data = settings.dataAttr;\n  var field_label = settings.labelField;\n  var field_value = settings.valueField;\n  var field_disabled = settings.disabledField;\n  var field_optgroup = settings.optgroupField;\n  var field_optgroup_label = settings.optgroupLabelField;\n  var field_optgroup_value = settings.optgroupValueField;\n  var tag_name = input.tagName.toLowerCase();\n  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n  if (!placeholder && !settings.allowEmptyOption) {\n    let option = input.querySelector('option[value=\"\"]');\n    if (option) {\n      placeholder = option.textContent;\n    }\n  }\n  var settings_element = {\n    placeholder: placeholder,\n    options: [],\n    optgroups: [],\n    items: [],\n    maxItems: null\n  };\n\n  /**\n   * Initialize from a <select> element.\n   *\n   */\n  var init_select = () => {\n    var tagName;\n    var options = settings_element.options;\n    var optionsMap = {};\n    var group_count = 1;\n    let $order = 0;\n    var readData = el => {\n      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n      var json = attr_data && data[attr_data];\n      if (typeof json === 'string' && json.length) {\n        data = Object.assign(data, JSON.parse(json));\n      }\n      return data;\n    };\n    var addOption = (option, group) => {\n      var value = hash_key(option.value);\n      if (value == null) return;\n      if (!value && !settings.allowEmptyOption) return;\n\n      // if the option already exists, it's probably been\n      // duplicated in another optgroup. in this case, push\n      // the current group to the \"optgroup\" property on the\n      // existing option so that it's rendered in both places.\n      if (optionsMap.hasOwnProperty(value)) {\n        if (group) {\n          var arr = optionsMap[value][field_optgroup];\n          if (!arr) {\n            optionsMap[value][field_optgroup] = group;\n          } else if (!Array.isArray(arr)) {\n            optionsMap[value][field_optgroup] = [arr, group];\n          } else {\n            arr.push(group);\n          }\n        }\n      } else {\n        var option_data = readData(option);\n        option_data[field_label] = option_data[field_label] || option.textContent;\n        option_data[field_value] = option_data[field_value] || value;\n        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n        option_data[field_optgroup] = option_data[field_optgroup] || group;\n        option_data.$option = option;\n        option_data.$order = option_data.$order || ++$order;\n        optionsMap[value] = option_data;\n        options.push(option_data);\n      }\n      if (option.selected) {\n        settings_element.items.push(value);\n      }\n    };\n    var addGroup = optgroup => {\n      var id, optgroup_data;\n      optgroup_data = readData(optgroup);\n      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n      optgroup_data.$order = optgroup_data.$order || ++$order;\n      settings_element.optgroups.push(optgroup_data);\n      id = optgroup_data[field_optgroup_value];\n      iterate(optgroup.children, option => {\n        addOption(option, id);\n      });\n    };\n    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n    iterate(input.children, child => {\n      tagName = child.tagName.toLowerCase();\n      if (tagName === 'optgroup') {\n        addGroup(child);\n      } else if (tagName === 'option') {\n        addOption(child);\n      }\n    });\n  };\n\n  /**\n   * Initialize from a <input type=\"text\"> element.\n   *\n   */\n  var init_textbox = () => {\n    const data_raw = input.getAttribute(attr_data);\n    if (!data_raw) {\n      var value = input.value.trim() || '';\n      if (!settings.allowEmptyOption && !value.length) return;\n      const values = value.split(settings.delimiter);\n      iterate(values, value => {\n        const option = {};\n        option[field_label] = value;\n        option[field_value] = value;\n        settings_element.options.push(option);\n      });\n      settings_element.items = values;\n    } else {\n      settings_element.options = JSON.parse(data_raw);\n      iterate(settings_element.options, opt => {\n        settings_element.items.push(opt[field_value]);\n      });\n    }\n  };\n  if (tag_name === 'select') {\n    init_select();\n  } else {\n    init_textbox();\n  }\n  return Object.assign({}, defaults, settings_element, settings_user);\n}\n\nvar instance_i = 0;\nclass TomSelect extends MicroPlugin(MicroEvent) {\n  constructor(input_arg, user_settings) {\n    super();\n    this.control_input = void 0;\n    this.wrapper = void 0;\n    this.dropdown = void 0;\n    this.control = void 0;\n    this.dropdown_content = void 0;\n    this.focus_node = void 0;\n    this.order = 0;\n    this.settings = void 0;\n    this.input = void 0;\n    this.tabIndex = void 0;\n    this.is_select_tag = void 0;\n    this.rtl = void 0;\n    this.inputId = void 0;\n    this._destroy = void 0;\n    this.sifter = void 0;\n    this.isOpen = false;\n    this.isDisabled = false;\n    this.isReadOnly = false;\n    this.isRequired = void 0;\n    this.isInvalid = false;\n    // @deprecated 1.8\n    this.isValid = true;\n    this.isLocked = false;\n    this.isFocused = false;\n    this.isInputHidden = false;\n    this.isSetup = false;\n    this.ignoreFocus = false;\n    this.ignoreHover = false;\n    this.hasOptions = false;\n    this.currentResults = void 0;\n    this.lastValue = '';\n    this.caretPos = 0;\n    this.loading = 0;\n    this.loadedSearches = {};\n    this.activeOption = null;\n    this.activeItems = [];\n    this.optgroups = {};\n    this.options = {};\n    this.userOptions = {};\n    this.items = [];\n    this.refreshTimeout = null;\n    instance_i++;\n    var dir;\n    var input = getDom(input_arg);\n    if (input.tomselect) {\n      throw new Error('Tom Select already initialized on this element');\n    }\n    input.tomselect = this;\n\n    // detect rtl environment\n    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n    dir = computedStyle.getPropertyValue('direction');\n\n    // setup default state\n    const settings = getSettings(input, user_settings);\n    this.settings = settings;\n    this.input = input;\n    this.tabIndex = input.tabIndex || 0;\n    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n    this.rtl = /rtl/i.test(dir);\n    this.inputId = getId(input, 'tomselect-' + instance_i);\n    this.isRequired = input.required;\n\n    // search system\n    this.sifter = new Sifter(this.options, {\n      diacritics: settings.diacritics\n    });\n\n    // option-dependent defaults\n    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n    if (typeof settings.hideSelected !== 'boolean') {\n      settings.hideSelected = settings.mode === 'multi';\n    }\n    if (typeof settings.hidePlaceholder !== 'boolean') {\n      settings.hidePlaceholder = settings.mode !== 'multi';\n    }\n\n    // set up createFilter callback\n    var filter = settings.createFilter;\n    if (typeof filter !== 'function') {\n      if (typeof filter === 'string') {\n        filter = new RegExp(filter);\n      }\n      if (filter instanceof RegExp) {\n        settings.createFilter = input => filter.test(input);\n      } else {\n        settings.createFilter = value => {\n          return this.settings.duplicates || !this.options[value];\n        };\n      }\n    }\n    this.initializePlugins(settings.plugins);\n    this.setupCallbacks();\n    this.setupTemplates();\n\n    // Create all elements\n    const wrapper = getDom('<div>');\n    const control = getDom('<div>');\n    const dropdown = this._render('dropdown');\n    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n    const classes = this.input.getAttribute('class') || '';\n    const inputMode = settings.mode;\n    var control_input;\n    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n    addClasses(control, settings.controlClass);\n    append(wrapper, control);\n    addClasses(dropdown, settings.dropdownClass, inputMode);\n    if (settings.copyClassesToDropdown) {\n      addClasses(dropdown, classes);\n    }\n    addClasses(dropdown_content, settings.dropdownContentClass);\n    append(dropdown, dropdown_content);\n    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n    // default controlInput\n    if (isHtmlString(settings.controlInput)) {\n      control_input = getDom(settings.controlInput);\n\n      // set attributes\n      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n      iterate$1(attrs, attr => {\n        if (input.getAttribute(attr)) {\n          setAttr(control_input, {\n            [attr]: input.getAttribute(attr)\n          });\n        }\n      });\n      control_input.tabIndex = -1;\n      control.appendChild(control_input);\n      this.focus_node = control_input;\n\n      // dom element\n    } else if (settings.controlInput) {\n      control_input = getDom(settings.controlInput);\n      this.focus_node = control_input;\n    } else {\n      control_input = getDom('<input/>');\n      this.focus_node = control;\n    }\n    this.wrapper = wrapper;\n    this.dropdown = dropdown;\n    this.dropdown_content = dropdown_content;\n    this.control = control;\n    this.control_input = control_input;\n    this.setup();\n  }\n\n  /**\n   * set up event bindings.\n   *\n   */\n  setup() {\n    const self = this;\n    const settings = self.settings;\n    const control_input = self.control_input;\n    const dropdown = self.dropdown;\n    const dropdown_content = self.dropdown_content;\n    const wrapper = self.wrapper;\n    const control = self.control;\n    const input = self.input;\n    const focus_node = self.focus_node;\n    const passive_event = {\n      passive: true\n    };\n    const listboxId = self.inputId + '-ts-dropdown';\n    setAttr(dropdown_content, {\n      id: listboxId\n    });\n    setAttr(focus_node, {\n      role: 'combobox',\n      'aria-haspopup': 'listbox',\n      'aria-expanded': 'false',\n      'aria-controls': listboxId\n    });\n    const control_id = getId(focus_node, self.inputId + '-ts-control');\n    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n    const label = document.querySelector(query);\n    const label_click = self.focus.bind(self);\n    if (label) {\n      addEvent(label, 'click', label_click);\n      setAttr(label, {\n        for: control_id\n      });\n      const label_id = getId(label, self.inputId + '-ts-label');\n      setAttr(focus_node, {\n        'aria-labelledby': label_id\n      });\n      setAttr(dropdown_content, {\n        'aria-labelledby': label_id\n      });\n    }\n    wrapper.style.width = input.style.width;\n    if (self.plugins.names.length) {\n      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n      addClasses([wrapper, dropdown], classes_plugins);\n    }\n    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n      setAttr(input, {\n        multiple: 'multiple'\n      });\n    }\n    if (settings.placeholder) {\n      setAttr(control_input, {\n        placeholder: settings.placeholder\n      });\n    }\n\n    // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n    if (!settings.splitOn && settings.delimiter) {\n      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n    }\n\n    // debounce user defined load() if loadThrottle > 0\n    // after initializePlugins() so plugins can create/modify user defined loaders\n    if (settings.load && settings.loadThrottle) {\n      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n    }\n    addEvent(dropdown, 'mousemove', () => {\n      self.ignoreHover = false;\n    });\n    addEvent(dropdown, 'mouseenter', e => {\n      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n      if (target_match) self.onOptionHover(e, target_match);\n    }, {\n      capture: true\n    });\n\n    // clicking on an option should select it\n    addEvent(dropdown, 'click', evt => {\n      const option = parentMatch(evt.target, '[data-selectable]');\n      if (option) {\n        self.onOptionSelect(evt, option);\n        preventDefault(evt, true);\n      }\n    });\n    addEvent(control, 'click', evt => {\n      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n      if (target_match && self.onItemSelect(evt, target_match)) {\n        preventDefault(evt, true);\n        return;\n      }\n\n      // retain focus (see control_input mousedown)\n      if (control_input.value != '') {\n        return;\n      }\n      self.onClick();\n      preventDefault(evt, true);\n    });\n\n    // keydown on focus_node for arrow_down/arrow_up\n    addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n    // keypress and input/keyup\n    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n    addEvent(control_input, 'input', e => self.onInput(e));\n    addEvent(focus_node, 'blur', e => self.onBlur(e));\n    addEvent(focus_node, 'focus', e => self.onFocus(e));\n    addEvent(control_input, 'paste', e => self.onPaste(e));\n    const doc_mousedown = evt => {\n      // blur if target is outside of this instance\n      // dropdown is not always inside wrapper\n      const target = evt.composedPath()[0];\n      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n        if (self.isFocused) {\n          self.blur();\n        }\n        self.inputState();\n        return;\n      }\n\n      // retain focus by preventing native handling. if the\n      // event target is the input it should not be modified.\n      // otherwise, text selection within the input won't work.\n      // Fixes bug #212 which is no covered by tests\n      if (target == control_input && self.isOpen) {\n        evt.stopPropagation();\n\n        // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n      } else {\n        preventDefault(evt, true);\n      }\n    };\n    const win_scroll = () => {\n      if (self.isOpen) {\n        self.positionDropdown();\n      }\n    };\n    addEvent(document, 'mousedown', doc_mousedown);\n    addEvent(window, 'scroll', win_scroll, passive_event);\n    addEvent(window, 'resize', win_scroll, passive_event);\n    this._destroy = () => {\n      document.removeEventListener('mousedown', doc_mousedown);\n      window.removeEventListener('scroll', win_scroll);\n      window.removeEventListener('resize', win_scroll);\n      if (label) label.removeEventListener('click', label_click);\n    };\n\n    // store original html and tab index so that they can be\n    // restored when the destroy() method is called.\n    this.revertSettings = {\n      innerHTML: input.innerHTML,\n      tabIndex: input.tabIndex\n    };\n    input.tabIndex = -1;\n    input.insertAdjacentElement('afterend', self.wrapper);\n    self.sync(false);\n    settings.items = [];\n    delete settings.optgroups;\n    delete settings.options;\n    addEvent(input, 'invalid', () => {\n      if (self.isValid) {\n        self.isValid = false;\n        self.isInvalid = true;\n        self.refreshState();\n      }\n    });\n    self.updateOriginalInput();\n    self.refreshItems();\n    self.close(false);\n    self.inputState();\n    self.isSetup = true;\n    if (input.disabled) {\n      self.disable();\n    } else if (input.readOnly) {\n      self.setReadOnly(true);\n    } else {\n      self.enable(); //sets tabIndex\n    }\n\n    self.on('change', this.onChange);\n    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n    self.trigger('initialize');\n\n    // preload options\n    if (settings.preload === true) {\n      self.preload();\n    }\n  }\n\n  /**\n   * Register options and optgroups\n   *\n   */\n  setupOptions(options = [], optgroups = []) {\n    // build options table\n    this.addOptions(options);\n\n    // build optgroup table\n    iterate$1(optgroups, optgroup => {\n      this.registerOptionGroup(optgroup);\n    });\n  }\n\n  /**\n   * Sets up default rendering functions.\n   */\n  setupTemplates() {\n    var self = this;\n    var field_label = self.settings.labelField;\n    var field_optgroup = self.settings.optgroupLabelField;\n    var templates = {\n      'optgroup': data => {\n        let optgroup = document.createElement('div');\n        optgroup.className = 'optgroup';\n        optgroup.appendChild(data.options);\n        return optgroup;\n      },\n      'optgroup_header': (data, escape) => {\n        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n      },\n      'option': (data, escape) => {\n        return '<div>' + escape(data[field_label]) + '</div>';\n      },\n      'item': (data, escape) => {\n        return '<div>' + escape(data[field_label]) + '</div>';\n      },\n      'option_create': (data, escape) => {\n        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n      },\n      'no_results': () => {\n        return '<div class=\"no-results\">No results found</div>';\n      },\n      'loading': () => {\n        return '<div class=\"spinner\"></div>';\n      },\n      'not_loading': () => {},\n      'dropdown': () => {\n        return '<div></div>';\n      }\n    };\n    self.settings.render = Object.assign({}, templates, self.settings.render);\n  }\n\n  /**\n   * Maps fired events to callbacks provided\n   * in the settings used when creating the control.\n   */\n  setupCallbacks() {\n    var key, fn;\n    var callbacks = {\n      'initialize': 'onInitialize',\n      'change': 'onChange',\n      'item_add': 'onItemAdd',\n      'item_remove': 'onItemRemove',\n      'item_select': 'onItemSelect',\n      'clear': 'onClear',\n      'option_add': 'onOptionAdd',\n      'option_remove': 'onOptionRemove',\n      'option_clear': 'onOptionClear',\n      'optgroup_add': 'onOptionGroupAdd',\n      'optgroup_remove': 'onOptionGroupRemove',\n      'optgroup_clear': 'onOptionGroupClear',\n      'dropdown_open': 'onDropdownOpen',\n      'dropdown_close': 'onDropdownClose',\n      'type': 'onType',\n      'load': 'onLoad',\n      'focus': 'onFocus',\n      'blur': 'onBlur'\n    };\n    for (key in callbacks) {\n      fn = this.settings[callbacks[key]];\n      if (fn) this.on(key, fn);\n    }\n  }\n\n  /**\n   * Sync the Tom Select instance with the original input or select\n   *\n   */\n  sync(get_settings = true) {\n    const self = this;\n    const settings = get_settings ? getSettings(self.input, {\n      delimiter: self.settings.delimiter\n    }) : self.settings;\n    self.setupOptions(settings.options, settings.optgroups);\n    self.setValue(settings.items || [], true); // silent prevents recursion\n\n    self.lastQuery = null; // so updated options will be displayed in dropdown\n  }\n\n  /**\n   * Triggered when the main control element\n   * has a click event.\n   *\n   */\n  onClick() {\n    var self = this;\n    if (self.activeItems.length > 0) {\n      self.clearActiveItems();\n      self.focus();\n      return;\n    }\n    if (self.isFocused && self.isOpen) {\n      self.blur();\n    } else {\n      self.focus();\n    }\n  }\n\n  /**\n   * @deprecated v1.7\n   *\n   */\n  onMouseDown() {}\n\n  /**\n   * Triggered when the value of the control has been changed.\n   * This should propagate the event to the original DOM\n   * input / select element.\n   */\n  onChange() {\n    triggerEvent(this.input, 'input');\n    triggerEvent(this.input, 'change');\n  }\n\n  /**\n   * Triggered on <input> paste.\n   *\n   */\n  onPaste(e) {\n    var self = this;\n    if (self.isInputHidden || self.isLocked) {\n      preventDefault(e);\n      return;\n    }\n\n    // If a regex or string is included, this will split the pasted\n    // input and create Items for each separate value\n    if (!self.settings.splitOn) {\n      return;\n    }\n\n    // Wait for pasted text to be recognized in value\n    setTimeout(() => {\n      var pastedText = self.inputValue();\n      if (!pastedText.match(self.settings.splitOn)) {\n        return;\n      }\n      var splitInput = pastedText.trim().split(self.settings.splitOn);\n      iterate$1(splitInput, piece => {\n        const hash = hash_key(piece);\n        if (hash) {\n          if (this.options[piece]) {\n            self.addItem(piece);\n          } else {\n            self.createItem(piece);\n          }\n        }\n      });\n    }, 0);\n  }\n\n  /**\n   * Triggered on <input> keypress.\n   *\n   */\n  onKeyPress(e) {\n    var self = this;\n    if (self.isLocked) {\n      preventDefault(e);\n      return;\n    }\n    var character = String.fromCharCode(e.keyCode || e.which);\n    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n      self.createItem();\n      preventDefault(e);\n      return;\n    }\n  }\n\n  /**\n   * Triggered on <input> keydown.\n   *\n   */\n  onKeyDown(e) {\n    var self = this;\n    self.ignoreHover = true;\n    if (self.isLocked) {\n      if (e.keyCode !== KEY_TAB) {\n        preventDefault(e);\n      }\n      return;\n    }\n    switch (e.keyCode) {\n      // ctrl+A: select all\n      case KEY_A:\n        if (isKeyDown(KEY_SHORTCUT, e)) {\n          if (self.control_input.value == '') {\n            preventDefault(e);\n            self.selectAll();\n            return;\n          }\n        }\n        break;\n\n      // esc: close dropdown\n      case KEY_ESC:\n        if (self.isOpen) {\n          preventDefault(e, true);\n          self.close();\n        }\n        self.clearActiveItems();\n        return;\n\n      // down: open dropdown or move selection down\n      case KEY_DOWN:\n        if (!self.isOpen && self.hasOptions) {\n          self.open();\n        } else if (self.activeOption) {\n          let next = self.getAdjacent(self.activeOption, 1);\n          if (next) self.setActiveOption(next);\n        }\n        preventDefault(e);\n        return;\n\n      // up: move selection up\n      case KEY_UP:\n        if (self.activeOption) {\n          let prev = self.getAdjacent(self.activeOption, -1);\n          if (prev) self.setActiveOption(prev);\n        }\n        preventDefault(e);\n        return;\n\n      // return: select active option\n      case KEY_RETURN:\n        if (self.canSelect(self.activeOption)) {\n          self.onOptionSelect(e, self.activeOption);\n          preventDefault(e);\n\n          // if the option_create=null, the dropdown might be closed\n        } else if (self.settings.create && self.createItem()) {\n          preventDefault(e);\n\n          // don't submit form when searching for a value\n        } else if (document.activeElement == self.control_input && self.isOpen) {\n          preventDefault(e);\n        }\n        return;\n\n      // left: modifiy item selection to the left\n      case KEY_LEFT:\n        self.advanceSelection(-1, e);\n        return;\n\n      // right: modifiy item selection to the right\n      case KEY_RIGHT:\n        self.advanceSelection(1, e);\n        return;\n\n      // tab: select active option and/or create item\n      case KEY_TAB:\n        if (self.settings.selectOnTab) {\n          if (self.canSelect(self.activeOption)) {\n            self.onOptionSelect(e, self.activeOption);\n\n            // prevent default [tab] behaviour of jump to the next field\n            // if select isFull, then the dropdown won't be open and [tab] will work normally\n            preventDefault(e);\n          }\n          if (self.settings.create && self.createItem()) {\n            preventDefault(e);\n          }\n        }\n        return;\n\n      // delete|backspace: delete items\n      case KEY_BACKSPACE:\n      case KEY_DELETE:\n        self.deleteSelection(e);\n        return;\n    }\n\n    // don't enter text in the control_input when active items are selected\n    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n      preventDefault(e);\n    }\n  }\n\n  /**\n   * Triggered on <input> keyup.\n   *\n   */\n  onInput(e) {\n    if (this.isLocked) {\n      return;\n    }\n    const value = this.inputValue();\n    if (this.lastValue === value) return;\n    this.lastValue = value;\n    if (value == '') {\n      this._onInput();\n      return;\n    }\n    if (this.refreshTimeout) {\n      clearTimeout(this.refreshTimeout);\n    }\n    this.refreshTimeout = timeout(() => {\n      this.refreshTimeout = null;\n      this._onInput();\n    }, this.settings.refreshThrottle);\n  }\n  _onInput() {\n    const value = this.lastValue;\n    if (this.settings.shouldLoad.call(this, value)) {\n      this.load(value);\n    }\n    this.refreshOptions();\n    this.trigger('type', value);\n  }\n\n  /**\n   * Triggered when the user rolls over\n   * an option in the autocomplete dropdown menu.\n   *\n   */\n  onOptionHover(evt, option) {\n    if (this.ignoreHover) return;\n    this.setActiveOption(option, false);\n  }\n\n  /**\n   * Triggered on <input> focus.\n   *\n   */\n  onFocus(e) {\n    var self = this;\n    var wasFocused = self.isFocused;\n    if (self.isDisabled || self.isReadOnly) {\n      self.blur();\n      preventDefault(e);\n      return;\n    }\n    if (self.ignoreFocus) return;\n    self.isFocused = true;\n    if (self.settings.preload === 'focus') self.preload();\n    if (!wasFocused) self.trigger('focus');\n    if (!self.activeItems.length) {\n      self.inputState();\n      self.refreshOptions(!!self.settings.openOnFocus);\n    }\n    self.refreshState();\n  }\n\n  /**\n   * Triggered on <input> blur.\n   *\n   */\n  onBlur(e) {\n    if (document.hasFocus() === false) return;\n    var self = this;\n    if (!self.isFocused) return;\n    self.isFocused = false;\n    self.ignoreFocus = false;\n    var deactivate = () => {\n      self.close();\n      self.setActiveItem();\n      self.setCaret(self.items.length);\n      self.trigger('blur');\n    };\n    if (self.settings.create && self.settings.createOnBlur) {\n      self.createItem(null, deactivate);\n    } else {\n      deactivate();\n    }\n  }\n\n  /**\n   * Triggered when the user clicks on an option\n   * in the autocomplete dropdown menu.\n   *\n   */\n  onOptionSelect(evt, option) {\n    var value,\n      self = this;\n\n    // should not be possible to trigger a option under a disabled optgroup\n    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n      return;\n    }\n    if (option.classList.contains('create')) {\n      self.createItem(null, () => {\n        if (self.settings.closeAfterSelect) {\n          self.close();\n        }\n      });\n    } else {\n      value = option.dataset.value;\n      if (typeof value !== 'undefined') {\n        self.lastQuery = null;\n        self.addItem(value);\n        if (self.settings.closeAfterSelect) {\n          self.close();\n        }\n        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n          self.setActiveOption(option);\n        }\n      }\n    }\n  }\n\n  /**\n   * Return true if the given option can be selected\n   *\n   */\n  canSelect(option) {\n    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Triggered when the user clicks on an item\n   * that has been selected.\n   *\n   */\n  onItemSelect(evt, item) {\n    var self = this;\n    if (!self.isLocked && self.settings.mode === 'multi') {\n      preventDefault(evt);\n      self.setActiveItem(item, evt);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Determines whether or not to invoke\n   * the user-provided option provider / loader\n   *\n   * Note, there is a subtle difference between\n   * this.canLoad() and this.settings.shouldLoad();\n   *\n   *\t- settings.shouldLoad() is a user-input validator.\n   *\tWhen false is returned, the not_loading template\n   *\twill be added to the dropdown\n   *\n   *\t- canLoad() is lower level validator that checks\n   * \tthe Tom Select instance. There is no inherent user\n   *\tfeedback when canLoad returns false\n   *\n   */\n  canLoad(value) {\n    if (!this.settings.load) return false;\n    if (this.loadedSearches.hasOwnProperty(value)) return false;\n    return true;\n  }\n\n  /**\n   * Invokes the user-provided option provider / loader.\n   *\n   */\n  load(value) {\n    const self = this;\n    if (!self.canLoad(value)) return;\n    addClasses(self.wrapper, self.settings.loadingClass);\n    self.loading++;\n    const callback = self.loadCallback.bind(self);\n    self.settings.load.call(self, value, callback);\n  }\n\n  /**\n   * Invoked by the user-provided option provider\n   *\n   */\n  loadCallback(options, optgroups) {\n    const self = this;\n    self.loading = Math.max(self.loading - 1, 0);\n    self.lastQuery = null;\n    self.clearActiveOption(); // when new results load, focus should be on first option\n    self.setupOptions(options, optgroups);\n    self.refreshOptions(self.isFocused && !self.isInputHidden);\n    if (!self.loading) {\n      removeClasses(self.wrapper, self.settings.loadingClass);\n    }\n    self.trigger('load', options, optgroups);\n  }\n  preload() {\n    var classList = this.wrapper.classList;\n    if (classList.contains('preloaded')) return;\n    classList.add('preloaded');\n    this.load('');\n  }\n\n  /**\n   * Sets the input field of the control to the specified value.\n   *\n   */\n  setTextboxValue(value = '') {\n    var input = this.control_input;\n    var changed = input.value !== value;\n    if (changed) {\n      input.value = value;\n      triggerEvent(input, 'update');\n      this.lastValue = value;\n    }\n  }\n\n  /**\n   * Returns the value of the control. If multiple items\n   * can be selected (e.g. <select multiple>), this returns\n   * an array. If only one item can be selected, this\n   * returns a string.\n   *\n   */\n  getValue() {\n    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n      return this.items;\n    }\n    return this.items.join(this.settings.delimiter);\n  }\n\n  /**\n   * Resets the selected items to the given value.\n   *\n   */\n  setValue(value, silent) {\n    var events = silent ? [] : ['change'];\n    debounce_events(this, events, () => {\n      this.clear(silent);\n      this.addItems(value, silent);\n    });\n  }\n\n  /**\n   * Resets the number of max items to the given value\n   *\n   */\n  setMaxItems(value) {\n    if (value === 0) value = null; //reset to unlimited items.\n    this.settings.maxItems = value;\n    this.refreshState();\n  }\n\n  /**\n   * Sets the selected item.\n   *\n   */\n  setActiveItem(item, e) {\n    var self = this;\n    var eventName;\n    var i, begin, end, swap;\n    var last;\n    if (self.settings.mode === 'single') return;\n\n    // clear the active selection\n    if (!item) {\n      self.clearActiveItems();\n      if (self.isFocused) {\n        self.inputState();\n      }\n      return;\n    }\n\n    // modify selection\n    eventName = e && e.type.toLowerCase();\n    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n      last = self.getLastActive();\n      begin = Array.prototype.indexOf.call(self.control.children, last);\n      end = Array.prototype.indexOf.call(self.control.children, item);\n      if (begin > end) {\n        swap = begin;\n        begin = end;\n        end = swap;\n      }\n      for (i = begin; i <= end; i++) {\n        item = self.control.children[i];\n        if (self.activeItems.indexOf(item) === -1) {\n          self.setActiveItemClass(item);\n        }\n      }\n      preventDefault(e);\n    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n      if (item.classList.contains('active')) {\n        self.removeActiveItem(item);\n      } else {\n        self.setActiveItemClass(item);\n      }\n    } else {\n      self.clearActiveItems();\n      self.setActiveItemClass(item);\n    }\n\n    // ensure control has focus\n    self.inputState();\n    if (!self.isFocused) {\n      self.focus();\n    }\n  }\n\n  /**\n   * Set the active and last-active classes\n   *\n   */\n  setActiveItemClass(item) {\n    const self = this;\n    const last_active = self.control.querySelector('.last-active');\n    if (last_active) removeClasses(last_active, 'last-active');\n    addClasses(item, 'active last-active');\n    self.trigger('item_select', item);\n    if (self.activeItems.indexOf(item) == -1) {\n      self.activeItems.push(item);\n    }\n  }\n\n  /**\n   * Remove active item\n   *\n   */\n  removeActiveItem(item) {\n    var idx = this.activeItems.indexOf(item);\n    this.activeItems.splice(idx, 1);\n    removeClasses(item, 'active');\n  }\n\n  /**\n   * Clears all the active items\n   *\n   */\n  clearActiveItems() {\n    removeClasses(this.activeItems, 'active');\n    this.activeItems = [];\n  }\n\n  /**\n   * Sets the selected item in the dropdown menu\n   * of available options.\n   *\n   */\n  setActiveOption(option, scroll = true) {\n    if (option === this.activeOption) {\n      return;\n    }\n    this.clearActiveOption();\n    if (!option) return;\n    this.activeOption = option;\n    setAttr(this.focus_node, {\n      'aria-activedescendant': option.getAttribute('id')\n    });\n    setAttr(option, {\n      'aria-selected': 'true'\n    });\n    addClasses(option, 'active');\n    if (scroll) this.scrollToOption(option);\n  }\n\n  /**\n   * Sets the dropdown_content scrollTop to display the option\n   *\n   */\n  scrollToOption(option, behavior) {\n    if (!option) return;\n    const content = this.dropdown_content;\n    const height_menu = content.clientHeight;\n    const scrollTop = content.scrollTop || 0;\n    const height_item = option.offsetHeight;\n    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n    if (y + height_item > height_menu + scrollTop) {\n      this.scroll(y - height_menu + height_item, behavior);\n    } else if (y < scrollTop) {\n      this.scroll(y, behavior);\n    }\n  }\n\n  /**\n   * Scroll the dropdown to the given position\n   *\n   */\n  scroll(scrollTop, behavior) {\n    const content = this.dropdown_content;\n    if (behavior) {\n      content.style.scrollBehavior = behavior;\n    }\n    content.scrollTop = scrollTop;\n    content.style.scrollBehavior = '';\n  }\n\n  /**\n   * Clears the active option\n   *\n   */\n  clearActiveOption() {\n    if (this.activeOption) {\n      removeClasses(this.activeOption, 'active');\n      setAttr(this.activeOption, {\n        'aria-selected': null\n      });\n    }\n    this.activeOption = null;\n    setAttr(this.focus_node, {\n      'aria-activedescendant': null\n    });\n  }\n\n  /**\n   * Selects all items (CTRL + A).\n   */\n  selectAll() {\n    const self = this;\n    if (self.settings.mode === 'single') return;\n    const activeItems = self.controlChildren();\n    if (!activeItems.length) return;\n    self.inputState();\n    self.close();\n    self.activeItems = activeItems;\n    iterate$1(activeItems, item => {\n      self.setActiveItemClass(item);\n    });\n  }\n\n  /**\n   * Determines if the control_input should be in a hidden or visible state\n   *\n   */\n  inputState() {\n    var self = this;\n    if (!self.control.contains(self.control_input)) return;\n    setAttr(self.control_input, {\n      placeholder: self.settings.placeholder\n    });\n    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n      self.setTextboxValue();\n      self.isInputHidden = true;\n    } else {\n      if (self.settings.hidePlaceholder && self.items.length > 0) {\n        setAttr(self.control_input, {\n          placeholder: ''\n        });\n      }\n      self.isInputHidden = false;\n    }\n    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n  }\n\n  /**\n   * Get the input value\n   */\n  inputValue() {\n    return this.control_input.value.trim();\n  }\n\n  /**\n   * Gives the control focus.\n   */\n  focus() {\n    var self = this;\n    if (self.isDisabled || self.isReadOnly) return;\n    self.ignoreFocus = true;\n    if (self.control_input.offsetWidth) {\n      self.control_input.focus();\n    } else {\n      self.focus_node.focus();\n    }\n    setTimeout(() => {\n      self.ignoreFocus = false;\n      self.onFocus();\n    }, 0);\n  }\n\n  /**\n   * Forces the control out of focus.\n   *\n   */\n  blur() {\n    this.focus_node.blur();\n    this.onBlur();\n  }\n\n  /**\n   * Returns a function that scores an object\n   * to show how good of a match it is to the\n   * provided query.\n   *\n   * @return {function}\n   */\n  getScoreFunction(query) {\n    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n  }\n\n  /**\n   * Returns search options for sifter (the system\n   * for scoring and sorting results).\n   *\n   * @see https://github.com/orchidjs/sifter.js\n   * @return {object}\n   */\n  getSearchOptions() {\n    var settings = this.settings;\n    var sort = settings.sortField;\n    if (typeof settings.sortField === 'string') {\n      sort = [{\n        field: settings.sortField\n      }];\n    }\n    return {\n      fields: settings.searchField,\n      conjunction: settings.searchConjunction,\n      sort: sort,\n      nesting: settings.nesting\n    };\n  }\n\n  /**\n   * Searches through available options and returns\n   * a sorted array of matches.\n   *\n   */\n  search(query) {\n    var result, calculateScore;\n    var self = this;\n    var options = this.getSearchOptions();\n\n    // validate user-provided result scoring function\n    if (self.settings.score) {\n      calculateScore = self.settings.score.call(self, query);\n      if (typeof calculateScore !== 'function') {\n        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n      }\n    }\n\n    // perform search\n    if (query !== self.lastQuery) {\n      self.lastQuery = query;\n      result = self.sifter.search(query, Object.assign(options, {\n        score: calculateScore\n      }));\n      self.currentResults = result;\n    } else {\n      result = Object.assign({}, self.currentResults);\n    }\n\n    // filter out selected items\n    if (self.settings.hideSelected) {\n      result.items = result.items.filter(item => {\n        let hashed = hash_key(item.id);\n        return !(hashed && self.items.indexOf(hashed) !== -1);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Refreshes the list of available options shown\n   * in the autocomplete dropdown menu.\n   *\n   */\n  refreshOptions(triggerDropdown = true) {\n    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n    var create;\n    const groups = {};\n    const groups_order = [];\n    var self = this;\n    var query = self.inputValue();\n    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n    var results = self.search(query);\n    var active_option = null;\n    var show_dropdown = self.settings.shouldOpen || false;\n    var dropdown_content = self.dropdown_content;\n    if (same_query) {\n      active_option = self.activeOption;\n      if (active_option) {\n        active_group = active_option.closest('[data-group]');\n      }\n    }\n\n    // build markup\n    n = results.items.length;\n    if (typeof self.settings.maxOptions === 'number') {\n      n = Math.min(n, self.settings.maxOptions);\n    }\n    if (n > 0) {\n      show_dropdown = true;\n    }\n\n    // get fragment for group and the position of the group in group_order\n    const getGroupFragment = (optgroup, order) => {\n      let group_order_i = groups[optgroup];\n      if (group_order_i !== undefined) {\n        let order_group = groups_order[group_order_i];\n        if (order_group !== undefined) {\n          return [group_order_i, order_group.fragment];\n        }\n      }\n      let group_fragment = document.createDocumentFragment();\n      group_order_i = groups_order.length;\n      groups_order.push({\n        fragment: group_fragment,\n        order,\n        optgroup\n      });\n      return [group_order_i, group_fragment];\n    };\n\n    // render and group available options individually\n    for (i = 0; i < n; i++) {\n      // get option dom element\n      let item = results.items[i];\n      if (!item) continue;\n      let opt_value = item.id;\n      let option = self.options[opt_value];\n      if (option === undefined) continue;\n      let opt_hash = get_hash(opt_value);\n      let option_el = self.getOption(opt_hash, true);\n\n      // toggle 'selected' class\n      if (!self.settings.hideSelected) {\n        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n      }\n      optgroup = option[self.settings.optgroupField] || '';\n      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n        optgroup = optgroups[j];\n        let order = option.$order;\n        let self_optgroup = self.optgroups[optgroup];\n        if (self_optgroup === undefined) {\n          optgroup = '';\n        } else {\n          order = self_optgroup.$order;\n        }\n        const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n\n        // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n        if (j > 0) {\n          option_el = option_el.cloneNode(true);\n          setAttr(option_el, {\n            id: option.$id + '-clone-' + j,\n            'aria-selected': null\n          });\n          option_el.classList.add('ts-cloned');\n          removeClasses(option_el, 'active');\n\n          // make sure we keep the activeOption in the same group\n          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n            if (active_group && active_group.dataset.group === optgroup.toString()) {\n              active_option = option_el;\n            }\n          }\n        }\n        group_fragment.appendChild(option_el);\n        if (optgroup != '') {\n          groups[optgroup] = group_order_i;\n        }\n      }\n    }\n\n    // sort optgroups\n    if (self.settings.lockOptgroupOrder) {\n      groups_order.sort((a, b) => {\n        return a.order - b.order;\n      });\n    }\n\n    // render optgroup headers & join groups\n    html = document.createDocumentFragment();\n    iterate$1(groups_order, group_order => {\n      let group_fragment = group_order.fragment;\n      let optgroup = group_order.optgroup;\n      if (!group_fragment || !group_fragment.children.length) return;\n      let group_heading = self.optgroups[optgroup];\n      if (group_heading !== undefined) {\n        let group_options = document.createDocumentFragment();\n        let header = self.render('optgroup_header', group_heading);\n        append(group_options, header);\n        append(group_options, group_fragment);\n        let group_html = self.render('optgroup', {\n          group: group_heading,\n          options: group_options\n        });\n        append(html, group_html);\n      } else {\n        append(html, group_fragment);\n      }\n    });\n    dropdown_content.innerHTML = '';\n    append(dropdown_content, html);\n\n    // highlight matching terms inline\n    if (self.settings.highlight) {\n      removeHighlight(dropdown_content);\n      if (results.query.length && results.tokens.length) {\n        iterate$1(results.tokens, tok => {\n          highlight(dropdown_content, tok.regex);\n        });\n      }\n    }\n\n    // helper method for adding templates to dropdown\n    var add_template = template => {\n      let content = self.render(template, {\n        input: query\n      });\n      if (content) {\n        show_dropdown = true;\n        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n      }\n      return content;\n    };\n\n    // add loading message\n    if (self.loading) {\n      add_template('loading');\n\n      // invalid query\n    } else if (!self.settings.shouldLoad.call(self, query)) {\n      add_template('not_loading');\n\n      // add no_results message\n    } else if (results.items.length === 0) {\n      add_template('no_results');\n    }\n\n    // add create option\n    has_create_option = self.canCreate(query);\n    if (has_create_option) {\n      create = add_template('option_create');\n    }\n\n    // activate\n    self.hasOptions = results.items.length > 0 || has_create_option;\n    if (show_dropdown) {\n      if (results.items.length > 0) {\n        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n          active_option = self.getOption(self.items[0]);\n        }\n        if (!dropdown_content.contains(active_option)) {\n          let active_index = 0;\n          if (create && !self.settings.addPrecedence) {\n            active_index = 1;\n          }\n          active_option = self.selectable()[active_index];\n        }\n      } else if (create) {\n        active_option = create;\n      }\n      if (triggerDropdown && !self.isOpen) {\n        self.open();\n        self.scrollToOption(active_option, 'auto');\n      }\n      self.setActiveOption(active_option);\n    } else {\n      self.clearActiveOption();\n      if (triggerDropdown && self.isOpen) {\n        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n      }\n    }\n  }\n\n  /**\n   * Return list of selectable options\n   *\n   */\n  selectable() {\n    return this.dropdown_content.querySelectorAll('[data-selectable]');\n  }\n\n  /**\n   * Adds an available option. If it already exists,\n   * nothing will happen. Note: this does not refresh\n   * the options list dropdown (use `refreshOptions`\n   * for that).\n   *\n   * Usage:\n   *\n   *   this.addOption(data)\n   *\n   */\n  addOption(data, user_created = false) {\n    const self = this;\n\n    // @deprecated 1.7.7\n    // use addOptions( array, user_created ) for adding multiple options\n    if (Array.isArray(data)) {\n      self.addOptions(data, user_created);\n      return false;\n    }\n    const key = hash_key(data[self.settings.valueField]);\n    if (key === null || self.options.hasOwnProperty(key)) {\n      return false;\n    }\n    data.$order = data.$order || ++self.order;\n    data.$id = self.inputId + '-opt-' + data.$order;\n    self.options[key] = data;\n    self.lastQuery = null;\n    if (user_created) {\n      self.userOptions[key] = user_created;\n      self.trigger('option_add', key, data);\n    }\n    return key;\n  }\n\n  /**\n   * Add multiple options\n   *\n   */\n  addOptions(data, user_created = false) {\n    iterate$1(data, dat => {\n      this.addOption(dat, user_created);\n    });\n  }\n\n  /**\n   * @deprecated 1.7.7\n   */\n  registerOption(data) {\n    return this.addOption(data);\n  }\n\n  /**\n   * Registers an option group to the pool of option groups.\n   *\n   * @return {boolean|string}\n   */\n  registerOptionGroup(data) {\n    var key = hash_key(data[this.settings.optgroupValueField]);\n    if (key === null) return false;\n    data.$order = data.$order || ++this.order;\n    this.optgroups[key] = data;\n    return key;\n  }\n\n  /**\n   * Registers a new optgroup for options\n   * to be bucketed into.\n   *\n   */\n  addOptionGroup(id, data) {\n    var hashed_id;\n    data[this.settings.optgroupValueField] = id;\n    if (hashed_id = this.registerOptionGroup(data)) {\n      this.trigger('optgroup_add', hashed_id, data);\n    }\n  }\n\n  /**\n   * Removes an existing option group.\n   *\n   */\n  removeOptionGroup(id) {\n    if (this.optgroups.hasOwnProperty(id)) {\n      delete this.optgroups[id];\n      this.clearCache();\n      this.trigger('optgroup_remove', id);\n    }\n  }\n\n  /**\n   * Clears all existing option groups.\n   */\n  clearOptionGroups() {\n    this.optgroups = {};\n    this.clearCache();\n    this.trigger('optgroup_clear');\n  }\n\n  /**\n   * Updates an option available for selection. If\n   * it is visible in the selected items or options\n   * dropdown, it will be re-rendered automatically.\n   *\n   */\n  updateOption(value, data) {\n    const self = this;\n    var item_new;\n    var index_item;\n    const value_old = hash_key(value);\n    const value_new = hash_key(data[self.settings.valueField]);\n\n    // sanity checks\n    if (value_old === null) return;\n    const data_old = self.options[value_old];\n    if (data_old == undefined) return;\n    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n    const option = self.getOption(value_old);\n    const item = self.getItem(value_old);\n    data.$order = data.$order || data_old.$order;\n    delete self.options[value_old];\n\n    // invalidate render cache\n    // don't remove existing node yet, we'll remove it after replacing it\n    self.uncacheValue(value_new);\n    self.options[value_new] = data;\n\n    // update the option if it's in the dropdown\n    if (option) {\n      if (self.dropdown_content.contains(option)) {\n        const option_new = self._render('option', data);\n        replaceNode(option, option_new);\n        if (self.activeOption === option) {\n          self.setActiveOption(option_new);\n        }\n      }\n      option.remove();\n    }\n\n    // update the item if we have one\n    if (item) {\n      index_item = self.items.indexOf(value_old);\n      if (index_item !== -1) {\n        self.items.splice(index_item, 1, value_new);\n      }\n      item_new = self._render('item', data);\n      if (item.classList.contains('active')) addClasses(item_new, 'active');\n      replaceNode(item, item_new);\n    }\n\n    // invalidate last query because we might have updated the sortField\n    self.lastQuery = null;\n  }\n\n  /**\n   * Removes a single option.\n   *\n   */\n  removeOption(value, silent) {\n    const self = this;\n    value = get_hash(value);\n    self.uncacheValue(value);\n    delete self.userOptions[value];\n    delete self.options[value];\n    self.lastQuery = null;\n    self.trigger('option_remove', value);\n    self.removeItem(value, silent);\n  }\n\n  /**\n   * Clears all options.\n   */\n  clearOptions(filter) {\n    const boundFilter = (filter || this.clearFilter).bind(this);\n    this.loadedSearches = {};\n    this.userOptions = {};\n    this.clearCache();\n    const selected = {};\n    iterate$1(this.options, (option, key) => {\n      if (boundFilter(option, key)) {\n        selected[key] = option;\n      }\n    });\n    this.options = this.sifter.items = selected;\n    this.lastQuery = null;\n    this.trigger('option_clear');\n  }\n\n  /**\n   * Used by clearOptions() to decide whether or not an option should be removed\n   * Return true to keep an option, false to remove\n   *\n   */\n  clearFilter(option, value) {\n    if (this.items.indexOf(value) >= 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the dom element of the option\n   * matching the given value.\n   *\n   */\n  getOption(value, create = false) {\n    const hashed = hash_key(value);\n    if (hashed === null) return null;\n    const option = this.options[hashed];\n    if (option != undefined) {\n      if (option.$div) {\n        return option.$div;\n      }\n      if (create) {\n        return this._render('option', option);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the dom element of the next or previous dom element of the same type\n   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n   *\n   */\n  getAdjacent(option, direction, type = 'option') {\n    var self = this,\n      all;\n    if (!option) {\n      return null;\n    }\n    if (type == 'item') {\n      all = self.controlChildren();\n    } else {\n      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n    for (let i = 0; i < all.length; i++) {\n      if (all[i] != option) {\n        continue;\n      }\n      if (direction > 0) {\n        return all[i + 1];\n      }\n      return all[i - 1];\n    }\n    return null;\n  }\n\n  /**\n   * Returns the dom element of the item\n   * matching the given value.\n   *\n   */\n  getItem(item) {\n    if (typeof item == 'object') {\n      return item;\n    }\n    var value = hash_key(item);\n    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n  }\n\n  /**\n   * \"Selects\" multiple items at once. Adds them to the list\n   * at the current caret position.\n   *\n   */\n  addItems(values, silent) {\n    var self = this;\n    var items = Array.isArray(values) ? values : [values];\n    items = items.filter(x => self.items.indexOf(x) === -1);\n    const last_item = items[items.length - 1];\n    items.forEach(item => {\n      self.isPending = item !== last_item;\n      self.addItem(item, silent);\n    });\n  }\n\n  /**\n   * \"Selects\" an item. Adds it to the list\n   * at the current caret position.\n   *\n   */\n  addItem(value, silent) {\n    var events = silent ? [] : ['change', 'dropdown_close'];\n    debounce_events(this, events, () => {\n      var item, wasFull;\n      const self = this;\n      const inputMode = self.settings.mode;\n      const hashed = hash_key(value);\n      if (hashed && self.items.indexOf(hashed) !== -1) {\n        if (inputMode === 'single') {\n          self.close();\n        }\n        if (inputMode === 'single' || !self.settings.duplicates) {\n          return;\n        }\n      }\n      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n      if (inputMode === 'single') self.clear(silent);\n      if (inputMode === 'multi' && self.isFull()) return;\n      item = self._render('item', self.options[hashed]);\n      if (self.control.contains(item)) {\n        // duplicates\n        item = item.cloneNode(true);\n      }\n      wasFull = self.isFull();\n      self.items.splice(self.caretPos, 0, hashed);\n      self.insertAtCaret(item);\n      if (self.isSetup) {\n        // update menu / remove the option (if this is not one item being added as part of series)\n        if (!self.isPending && self.settings.hideSelected) {\n          let option = self.getOption(hashed);\n          let next = self.getAdjacent(option, 1);\n          if (next) {\n            self.setActiveOption(next);\n          }\n        }\n\n        // refreshOptions after setActiveOption(),\n        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n        if (!self.isPending && !self.settings.closeAfterSelect) {\n          self.refreshOptions(self.isFocused && inputMode !== 'single');\n        }\n\n        // hide the menu if the maximum number of items have been selected or no options are left\n        if (self.settings.closeAfterSelect != false && self.isFull()) {\n          self.close();\n        } else if (!self.isPending) {\n          self.positionDropdown();\n        }\n        self.trigger('item_add', hashed, item);\n        if (!self.isPending) {\n          self.updateOriginalInput({\n            silent: silent\n          });\n        }\n      }\n      if (!self.isPending || !wasFull && self.isFull()) {\n        self.inputState();\n        self.refreshState();\n      }\n    });\n  }\n\n  /**\n   * Removes the selected item matching\n   * the provided value.\n   *\n   */\n  removeItem(item = null, silent) {\n    const self = this;\n    item = self.getItem(item);\n    if (!item) return;\n    var i, idx;\n    const value = item.dataset.value;\n    i = nodeIndex(item);\n    item.remove();\n    if (item.classList.contains('active')) {\n      idx = self.activeItems.indexOf(item);\n      self.activeItems.splice(idx, 1);\n      removeClasses(item, 'active');\n    }\n    self.items.splice(i, 1);\n    self.lastQuery = null;\n    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n      self.removeOption(value, silent);\n    }\n    if (i < self.caretPos) {\n      self.setCaret(self.caretPos - 1);\n    }\n    self.updateOriginalInput({\n      silent: silent\n    });\n    self.refreshState();\n    self.positionDropdown();\n    self.trigger('item_remove', value, item);\n  }\n\n  /**\n   * Invokes the `create` method provided in the\n   * TomSelect options that should provide the data\n   * for the new item, given the user input.\n   *\n   * Once this completes, it will be added\n   * to the item list.\n   *\n   */\n  createItem(input = null, callback = () => {}) {\n    // triggerDropdown parameter @deprecated 2.1.1\n    if (arguments.length === 3) {\n      callback = arguments[2];\n    }\n    if (typeof callback != 'function') {\n      callback = () => {};\n    }\n    var self = this;\n    var caret = self.caretPos;\n    var output;\n    input = input || self.inputValue();\n    if (!self.canCreate(input)) {\n      callback();\n      return false;\n    }\n    self.lock();\n    var created = false;\n    var create = data => {\n      self.unlock();\n      if (!data || typeof data !== 'object') return callback();\n      var value = hash_key(data[self.settings.valueField]);\n      if (typeof value !== 'string') {\n        return callback();\n      }\n      self.setTextboxValue();\n      self.addOption(data, true);\n      self.setCaret(caret);\n      self.addItem(value);\n      callback(data);\n      created = true;\n    };\n    if (typeof self.settings.create === 'function') {\n      output = self.settings.create.call(this, input, create);\n    } else {\n      output = {\n        [self.settings.labelField]: input,\n        [self.settings.valueField]: input\n      };\n    }\n    if (!created) {\n      create(output);\n    }\n    return true;\n  }\n\n  /**\n   * Re-renders the selected item lists.\n   */\n  refreshItems() {\n    var self = this;\n    self.lastQuery = null;\n    if (self.isSetup) {\n      self.addItems(self.items);\n    }\n    self.updateOriginalInput();\n    self.refreshState();\n  }\n\n  /**\n   * Updates all state-dependent attributes\n   * and CSS classes.\n   */\n  refreshState() {\n    const self = this;\n    self.refreshValidityState();\n    const isFull = self.isFull();\n    const isLocked = self.isLocked;\n    self.wrapper.classList.toggle('rtl', self.rtl);\n    const wrap_classList = self.wrapper.classList;\n    wrap_classList.toggle('focus', self.isFocused);\n    wrap_classList.toggle('disabled', self.isDisabled);\n    wrap_classList.toggle('readonly', self.isReadOnly);\n    wrap_classList.toggle('required', self.isRequired);\n    wrap_classList.toggle('invalid', !self.isValid);\n    wrap_classList.toggle('locked', isLocked);\n    wrap_classList.toggle('full', isFull);\n    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n    wrap_classList.toggle('dropdown-active', self.isOpen);\n    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n    wrap_classList.toggle('has-items', self.items.length > 0);\n  }\n\n  /**\n   * Update the `required` attribute of both input and control input.\n   *\n   * The `required` property needs to be activated on the control input\n   * for the error to be displayed at the right place. `required` also\n   * needs to be temporarily deactivated on the input since the input is\n   * hidden and can't show errors.\n   */\n  refreshValidityState() {\n    var self = this;\n    if (!self.input.validity) {\n      return;\n    }\n    self.isValid = self.input.validity.valid;\n    self.isInvalid = !self.isValid;\n  }\n\n  /**\n   * Determines whether or not more items can be added\n   * to the control without exceeding the user-defined maximum.\n   *\n   * @returns {boolean}\n   */\n  isFull() {\n    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n  }\n\n  /**\n   * Refreshes the original <select> or <input>\n   * element to reflect the current state.\n   *\n   */\n  updateOriginalInput(opts = {}) {\n    const self = this;\n    var option, label;\n    const empty_option = self.input.querySelector('option[value=\"\"]');\n    if (self.is_select_tag) {\n      const selected = [];\n      const has_selected = self.input.querySelectorAll('option:checked').length;\n      function AddSelected(option_el, value, label) {\n        if (!option_el) {\n          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n        }\n\n        // don't move empty option from top of list\n        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n        if (option_el != empty_option) {\n          self.input.append(option_el);\n        }\n        selected.push(option_el);\n\n        // marking empty option as selected can break validation\n        // fixes https://github.com/orchidjs/tom-select/issues/303\n        if (option_el != empty_option || has_selected > 0) {\n          option_el.selected = true;\n        }\n        return option_el;\n      }\n\n      // unselect all selected options\n      self.input.querySelectorAll('option:checked').forEach(option_el => {\n        option_el.selected = false;\n      });\n\n      // nothing selected?\n      if (self.items.length == 0 && self.settings.mode == 'single') {\n        AddSelected(empty_option, \"\", \"\");\n\n        // order selected <option> tags for values in self.items\n      } else {\n        self.items.forEach(value => {\n          option = self.options[value];\n          label = option[self.settings.labelField] || '';\n          if (selected.includes(option.$option)) {\n            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n            AddSelected(reuse_opt, value, label);\n          } else {\n            option.$option = AddSelected(option.$option, value, label);\n          }\n        });\n      }\n    } else {\n      self.input.value = self.getValue();\n    }\n    if (self.isSetup) {\n      if (!opts.silent) {\n        self.trigger('change', self.getValue());\n      }\n    }\n  }\n\n  /**\n   * Shows the autocomplete dropdown containing\n   * the available options.\n   */\n  open() {\n    var self = this;\n    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n    self.isOpen = true;\n    setAttr(self.focus_node, {\n      'aria-expanded': 'true'\n    });\n    self.refreshState();\n    applyCSS(self.dropdown, {\n      visibility: 'hidden',\n      display: 'block'\n    });\n    self.positionDropdown();\n    applyCSS(self.dropdown, {\n      visibility: 'visible',\n      display: 'block'\n    });\n    self.focus();\n    self.trigger('dropdown_open', self.dropdown);\n  }\n\n  /**\n   * Closes the autocomplete dropdown menu.\n   */\n  close(setTextboxValue = true) {\n    var self = this;\n    var trigger = self.isOpen;\n    if (setTextboxValue) {\n      // before blur() to prevent form onchange event\n      self.setTextboxValue();\n      if (self.settings.mode === 'single' && self.items.length) {\n        self.inputState();\n      }\n    }\n    self.isOpen = false;\n    setAttr(self.focus_node, {\n      'aria-expanded': 'false'\n    });\n    applyCSS(self.dropdown, {\n      display: 'none'\n    });\n    if (self.settings.hideSelected) {\n      self.clearActiveOption();\n    }\n    self.refreshState();\n    if (trigger) self.trigger('dropdown_close', self.dropdown);\n  }\n\n  /**\n   * Calculates and applies the appropriate\n   * position of the dropdown if dropdownParent = 'body'.\n   * Otherwise, position is determined by css\n   */\n  positionDropdown() {\n    if (this.settings.dropdownParent !== 'body') {\n      return;\n    }\n    var context = this.control;\n    var rect = context.getBoundingClientRect();\n    var top = context.offsetHeight + rect.top + window.scrollY;\n    var left = rect.left + window.scrollX;\n    applyCSS(this.dropdown, {\n      width: rect.width + 'px',\n      top: top + 'px',\n      left: left + 'px'\n    });\n  }\n\n  /**\n   * Resets / clears all selected items\n   * from the control.\n   *\n   */\n  clear(silent) {\n    var self = this;\n    if (!self.items.length) return;\n    var items = self.controlChildren();\n    iterate$1(items, item => {\n      self.removeItem(item, true);\n    });\n    self.inputState();\n    if (!silent) self.updateOriginalInput();\n    self.trigger('clear');\n  }\n\n  /**\n   * A helper method for inserting an element\n   * at the current caret position.\n   *\n   */\n  insertAtCaret(el) {\n    const self = this;\n    const caret = self.caretPos;\n    const target = self.control;\n    target.insertBefore(el, target.children[caret] || null);\n    self.setCaret(caret + 1);\n  }\n\n  /**\n   * Removes the current selected item(s).\n   *\n   */\n  deleteSelection(e) {\n    var direction, selection, caret, tail;\n    var self = this;\n    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n    selection = getSelection(self.control_input);\n\n    // determine items that will be removed\n    const rm_items = [];\n    if (self.activeItems.length) {\n      tail = getTail(self.activeItems, direction);\n      caret = nodeIndex(tail);\n      if (direction > 0) {\n        caret++;\n      }\n      iterate$1(self.activeItems, item => rm_items.push(item));\n    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n      const items = self.controlChildren();\n      let rm_item;\n      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n        rm_item = items[self.caretPos - 1];\n      } else if (direction > 0 && selection.start === self.inputValue().length) {\n        rm_item = items[self.caretPos];\n      }\n      if (rm_item !== undefined) {\n        rm_items.push(rm_item);\n      }\n    }\n    if (!self.shouldDelete(rm_items, e)) {\n      return false;\n    }\n    preventDefault(e, true);\n\n    // perform removal\n    if (typeof caret !== 'undefined') {\n      self.setCaret(caret);\n    }\n    while (rm_items.length) {\n      self.removeItem(rm_items.pop());\n    }\n    self.inputState();\n    self.positionDropdown();\n    self.refreshOptions(false);\n    return true;\n  }\n\n  /**\n   * Return true if the items should be deleted\n   */\n  shouldDelete(items, evt) {\n    const values = items.map(item => item.dataset.value);\n\n    // allow the callback to abort\n    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Selects the previous / next item (depending on the `direction` argument).\n   *\n   * > 0 - right\n   * < 0 - left\n   *\n   */\n  advanceSelection(direction, e) {\n    var last_active,\n      adjacent,\n      self = this;\n    if (self.rtl) direction *= -1;\n    if (self.inputValue().length) return;\n\n    // add or remove to active items\n    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n      last_active = self.getLastActive(direction);\n      if (last_active) {\n        if (!last_active.classList.contains('active')) {\n          adjacent = last_active;\n        } else {\n          adjacent = self.getAdjacent(last_active, direction, 'item');\n        }\n\n        // if no active item, get items adjacent to the control input\n      } else if (direction > 0) {\n        adjacent = self.control_input.nextElementSibling;\n      } else {\n        adjacent = self.control_input.previousElementSibling;\n      }\n      if (adjacent) {\n        if (adjacent.classList.contains('active')) {\n          self.removeActiveItem(last_active);\n        }\n        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n      }\n\n      // move caret to the left or right\n    } else {\n      self.moveCaret(direction);\n    }\n  }\n  moveCaret(direction) {}\n\n  /**\n   * Get the last active item\n   *\n   */\n  getLastActive(direction) {\n    let last_active = this.control.querySelector('.last-active');\n    if (last_active) {\n      return last_active;\n    }\n    var result = this.control.querySelectorAll('.active');\n    if (result) {\n      return getTail(result, direction);\n    }\n  }\n\n  /**\n   * Moves the caret to the specified index.\n   *\n   * The input must be moved by leaving it in place and moving the\n   * siblings, due to the fact that focus cannot be restored once lost\n   * on mobile webkit devices\n   *\n   */\n  setCaret(new_pos) {\n    this.caretPos = this.items.length;\n  }\n\n  /**\n   * Return list of item dom elements\n   *\n   */\n  controlChildren() {\n    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n  }\n\n  /**\n   * Disables user input on the control. Used while\n   * items are being asynchronously created.\n   */\n  lock() {\n    this.setLocked(true);\n  }\n\n  /**\n   * Re-enables user input on the control.\n   */\n  unlock() {\n    this.setLocked(false);\n  }\n\n  /**\n   * Disable or enable user input on the control\n   */\n  setLocked(lock = this.isReadOnly || this.isDisabled) {\n    this.isLocked = lock;\n    this.refreshState();\n  }\n\n  /**\n   * Disables user input on the control completely.\n   * While disabled, it cannot receive focus.\n   */\n  disable() {\n    this.setDisabled(true);\n    this.close();\n  }\n\n  /**\n   * Enables the control so that it can respond\n   * to focus and user input.\n   */\n  enable() {\n    this.setDisabled(false);\n  }\n  setDisabled(disabled) {\n    this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n    this.isDisabled = disabled;\n    this.input.disabled = disabled;\n    this.control_input.disabled = disabled;\n    this.setLocked();\n  }\n  setReadOnly(isReadOnly) {\n    this.isReadOnly = isReadOnly;\n    this.input.readOnly = isReadOnly;\n    this.control_input.readOnly = isReadOnly;\n    this.setLocked();\n  }\n\n  /**\n   * Completely destroys the control and\n   * unbinds all event listeners so that it can\n   * be garbage collected.\n   */\n  destroy() {\n    var self = this;\n    var revertSettings = self.revertSettings;\n    self.trigger('destroy');\n    self.off();\n    self.wrapper.remove();\n    self.dropdown.remove();\n    self.input.innerHTML = revertSettings.innerHTML;\n    self.input.tabIndex = revertSettings.tabIndex;\n    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n    self._destroy();\n    delete self.input.tomselect;\n  }\n\n  /**\n   * A helper method for rendering \"item\" and\n   * \"option\" templates, given the data.\n   *\n   */\n  render(templateName, data) {\n    var id, html;\n    const self = this;\n    if (typeof this.settings.render[templateName] !== 'function') {\n      return null;\n    }\n\n    // render markup\n    html = self.settings.render[templateName].call(this, data, escape_html);\n    if (!html) {\n      return null;\n    }\n    html = getDom(html);\n\n    // add mandatory attributes\n    if (templateName === 'option' || templateName === 'option_create') {\n      if (data[self.settings.disabledField]) {\n        setAttr(html, {\n          'aria-disabled': 'true'\n        });\n      } else {\n        setAttr(html, {\n          'data-selectable': ''\n        });\n      }\n    } else if (templateName === 'optgroup') {\n      id = data.group[self.settings.optgroupValueField];\n      setAttr(html, {\n        'data-group': id\n      });\n      if (data.group[self.settings.disabledField]) {\n        setAttr(html, {\n          'data-disabled': ''\n        });\n      }\n    }\n    if (templateName === 'option' || templateName === 'item') {\n      const value = get_hash(data[self.settings.valueField]);\n      setAttr(html, {\n        'data-value': value\n      });\n\n      // make sure we have some classes if a template is overwritten\n      if (templateName === 'item') {\n        addClasses(html, self.settings.itemClass);\n        setAttr(html, {\n          'data-ts-item': ''\n        });\n      } else {\n        addClasses(html, self.settings.optionClass);\n        setAttr(html, {\n          role: 'option',\n          id: data.$id\n        });\n\n        // update cache\n        data.$div = html;\n        self.options[value] = data;\n      }\n    }\n    return html;\n  }\n\n  /**\n   * Type guarded rendering\n   *\n   */\n  _render(templateName, data) {\n    const html = this.render(templateName, data);\n    if (html == null) {\n      throw 'HTMLElement expected';\n    }\n    return html;\n  }\n\n  /**\n   * Clears the render cache for a template. If\n   * no template is given, clears all render\n   * caches.\n   *\n   */\n  clearCache() {\n    iterate$1(this.options, option => {\n      if (option.$div) {\n        option.$div.remove();\n        delete option.$div;\n      }\n    });\n  }\n\n  /**\n   * Removes a value from item and option caches\n   *\n   */\n  uncacheValue(value) {\n    const option_el = this.getOption(value);\n    if (option_el) option_el.remove();\n  }\n\n  /**\n   * Determines whether or not to display the\n   * create item prompt, given a user input.\n   *\n   */\n  canCreate(input) {\n    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n  }\n\n  /**\n   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n   *\n   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n   *\n   * });\n   */\n  hook(when, method, new_fn) {\n    var self = this;\n    var orig_method = self[method];\n    self[method] = function () {\n      var result, result_new;\n      if (when === 'after') {\n        result = orig_method.apply(self, arguments);\n      }\n      result_new = new_fn.apply(self, arguments);\n      if (when === 'instead') {\n        return result_new;\n      }\n      if (when === 'before') {\n        result = orig_method.apply(self, arguments);\n      }\n      return result;\n    };\n  }\n}\n\n/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction change_listener () {\n  addEvent(this.input, 'change', () => {\n    this.sync();\n  });\n}\n\n/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction checkbox_options (userOptions) {\n  var self = this;\n  var orig_onOptionSelect = self.onOptionSelect;\n  self.settings.hideSelected = false;\n  const cbOptions = Object.assign({\n    // so that the user may add different ones as well\n    className: \"tomselect-checkbox\",\n    // the following default to the historic plugin's values\n    checkedClassNames: undefined,\n    uncheckedClassNames: undefined\n  }, userOptions);\n  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n    if (toCheck) {\n      checkbox.checked = true;\n      if (cbOptions.uncheckedClassNames) {\n        checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n      }\n      if (cbOptions.checkedClassNames) {\n        checkbox.classList.add(...cbOptions.checkedClassNames);\n      }\n    } else {\n      checkbox.checked = false;\n      if (cbOptions.checkedClassNames) {\n        checkbox.classList.remove(...cbOptions.checkedClassNames);\n      }\n      if (cbOptions.uncheckedClassNames) {\n        checkbox.classList.add(...cbOptions.uncheckedClassNames);\n      }\n    }\n  };\n\n  // update the checkbox for an option\n  var UpdateCheckbox = function UpdateCheckbox(option) {\n    setTimeout(() => {\n      var checkbox = option.querySelector('input.' + cbOptions.className);\n      if (checkbox instanceof HTMLInputElement) {\n        UpdateChecked(checkbox, option.classList.contains('selected'));\n      }\n    }, 1);\n  };\n\n  // add checkbox to option template\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_option = self.settings.render.option;\n    self.settings.render.option = (data, escape_html) => {\n      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n      var checkbox = document.createElement('input');\n      if (cbOptions.className) {\n        checkbox.classList.add(cbOptions.className);\n      }\n      checkbox.addEventListener('click', function (evt) {\n        preventDefault(evt);\n      });\n      checkbox.type = 'checkbox';\n      const hashed = hash_key(data[self.settings.valueField]);\n      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n      rendered.prepend(checkbox);\n      return rendered;\n    };\n  });\n\n  // uncheck when item removed\n  self.on('item_remove', value => {\n    var option = self.getOption(value);\n    if (option) {\n      // if dropdown hasn't been opened yet, the option won't exist\n      option.classList.remove('selected'); // selected class won't be removed yet\n      UpdateCheckbox(option);\n    }\n  });\n\n  // check when item added\n  self.on('item_add', value => {\n    var option = self.getOption(value);\n    if (option) {\n      // if dropdown hasn't been opened yet, the option won't exist\n      UpdateCheckbox(option);\n    }\n  });\n\n  // remove items when selected option is clicked\n  self.hook('instead', 'onOptionSelect', (evt, option) => {\n    if (option.classList.contains('selected')) {\n      option.classList.remove('selected');\n      self.removeItem(option.dataset.value);\n      self.refreshOptions();\n      preventDefault(evt, true);\n      return;\n    }\n    orig_onOptionSelect.call(self, evt, option);\n    UpdateCheckbox(option);\n  });\n}\n\n/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction clear_button (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    className: 'clear-button',\n    title: 'Clear All',\n    html: data => {\n      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n    }\n  }, userOptions);\n  self.on('initialize', () => {\n    var button = getDom(options.html(options));\n    button.addEventListener('click', evt => {\n      if (self.isLocked) return;\n      self.clear();\n      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n        self.addItem('');\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n    });\n    self.control.appendChild(button);\n  });\n}\n\n/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nconst insertAfter = (referenceNode, newNode) => {\n  var _referenceNode$parent;\n  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n};\nconst insertBefore = (referenceNode, newNode) => {\n  var _referenceNode$parent2;\n  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n};\nconst isBefore = (referenceNode, newNode) => {\n  do {\n    var _newNode;\n    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n    if (referenceNode == newNode) {\n      return true;\n    }\n  } while (newNode && newNode.previousElementSibling);\n  return false;\n};\nfunction drag_drop () {\n  var self = this;\n  if (self.settings.mode !== 'multi') return;\n  var orig_lock = self.lock;\n  var orig_unlock = self.unlock;\n  let sortable = true;\n  let drag_item;\n\n  /**\n   * Add draggable attribute to item\n   */\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_item = self.settings.render.item;\n    self.settings.render.item = (data, escape) => {\n      const item = getDom(orig_render_item.call(self, data, escape));\n      setAttr(item, {\n        'draggable': 'true'\n      });\n\n      // prevent doc_mousedown (see tom-select.ts)\n      const mousedown = evt => {\n        if (!sortable) preventDefault(evt);\n        evt.stopPropagation();\n      };\n      const dragStart = evt => {\n        drag_item = item;\n        setTimeout(() => {\n          item.classList.add('ts-dragging');\n        }, 0);\n      };\n      const dragOver = evt => {\n        evt.preventDefault();\n        item.classList.add('ts-drag-over');\n        moveitem(item, drag_item);\n      };\n      const dragLeave = () => {\n        item.classList.remove('ts-drag-over');\n      };\n      const moveitem = (targetitem, dragitem) => {\n        if (dragitem === undefined) return;\n        if (isBefore(dragitem, item)) {\n          insertAfter(targetitem, dragitem);\n        } else {\n          insertBefore(targetitem, dragitem);\n        }\n      };\n      const dragend = () => {\n        var _drag_item;\n        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n        drag_item = undefined;\n        var values = [];\n        self.control.querySelectorAll(`[data-value]`).forEach(el => {\n          if (el.dataset.value) {\n            let value = el.dataset.value;\n            if (value) {\n              values.push(value);\n            }\n          }\n        });\n        self.setValue(values);\n      };\n      addEvent(item, 'mousedown', mousedown);\n      addEvent(item, 'dragstart', dragStart);\n      addEvent(item, 'dragenter', dragOver);\n      addEvent(item, 'dragover', dragOver);\n      addEvent(item, 'dragleave', dragLeave);\n      addEvent(item, 'dragend', dragend);\n      return item;\n    };\n  });\n  self.hook('instead', 'lock', () => {\n    sortable = false;\n    return orig_lock.call(self);\n  });\n  self.hook('instead', 'unlock', () => {\n    sortable = true;\n    return orig_unlock.call(self);\n  });\n}\n\n/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction dropdown_header (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    title: 'Untitled',\n    headerClass: 'dropdown-header',\n    titleRowClass: 'dropdown-header-title',\n    labelClass: 'dropdown-header-label',\n    closeClass: 'dropdown-header-close',\n    html: data => {\n      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n    }\n  }, userOptions);\n  self.on('initialize', () => {\n    var header = getDom(options.html(options));\n    var close_link = header.querySelector('.' + options.closeClass);\n    if (close_link) {\n      close_link.addEventListener('click', evt => {\n        preventDefault(evt, true);\n        self.close();\n      });\n    }\n    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n  });\n}\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction caret_position () {\n  var self = this;\n\n  /**\n   * Moves the caret to the specified index.\n   *\n   * The input must be moved by leaving it in place and moving the\n   * siblings, due to the fact that focus cannot be restored once lost\n   * on mobile webkit devices\n   *\n   */\n  self.hook('instead', 'setCaret', new_pos => {\n    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n      new_pos = self.items.length;\n    } else {\n      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n      if (new_pos != self.caretPos && !self.isPending) {\n        self.controlChildren().forEach((child, j) => {\n          if (j < new_pos) {\n            self.control_input.insertAdjacentElement('beforebegin', child);\n          } else {\n            self.control.appendChild(child);\n          }\n        });\n      }\n    }\n    self.caretPos = new_pos;\n  });\n  self.hook('instead', 'moveCaret', direction => {\n    if (!self.isFocused) return;\n\n    // move caret before or after selected items\n    const last_active = self.getLastActive(direction);\n    if (last_active) {\n      const idx = nodeIndex(last_active);\n      self.setCaret(direction > 0 ? idx + 1 : idx);\n      self.setActiveItem();\n      removeClasses(last_active, 'last-active');\n\n      // move caret left or right of current position\n    } else {\n      self.setCaret(self.caretPos + direction);\n    }\n  });\n}\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction dropdown_input () {\n  const self = this;\n  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n  self.hook('before', 'setup', () => {\n    self.focus_node = self.control;\n    addClasses(self.control_input, 'dropdown-input');\n    const div = getDom('<div class=\"dropdown-input-wrap\">');\n    div.append(self.control_input);\n    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n    // set a placeholder in the select control\n    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n    placeholder.placeholder = self.settings.placeholder || '';\n    self.control.append(placeholder);\n  });\n  self.on('initialize', () => {\n    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n    self.control_input.addEventListener('keydown', evt => {\n      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n      switch (evt.keyCode) {\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(evt, true);\n            self.close();\n          }\n          self.clearActiveItems();\n          return;\n        case KEY_TAB:\n          self.focus_node.tabIndex = -1;\n          break;\n      }\n      return self.onKeyDown.call(self, evt);\n    });\n    self.on('blur', () => {\n      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n    });\n\n    // give the control_input focus when the dropdown is open\n    self.on('dropdown_open', () => {\n      self.control_input.focus();\n    });\n\n    // prevent onBlur from closing when focus is on the control_input\n    const orig_onBlur = self.onBlur;\n    self.hook('instead', 'onBlur', evt => {\n      if (evt && evt.relatedTarget == self.control_input) return;\n      return orig_onBlur.call(self);\n    });\n    addEvent(self.control_input, 'blur', () => self.onBlur());\n\n    // return focus to control to allow further keyboard input\n    self.hook('before', 'close', () => {\n      if (!self.isOpen) return;\n      self.focus_node.focus({\n        preventScroll: true\n      });\n    });\n  });\n}\n\n/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction input_autogrow () {\n  var self = this;\n  self.on('initialize', () => {\n    var test_input = document.createElement('span');\n    var control = self.control_input;\n    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n    self.wrapper.appendChild(test_input);\n    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n    for (const style_name of transfer_styles) {\n      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n      test_input.style[style_name] = control.style[style_name];\n    }\n\n    /**\n     * Set the control width\n     *\n     */\n    var resize = () => {\n      test_input.textContent = control.value;\n      control.style.width = test_input.clientWidth + 'px';\n    };\n    resize();\n    self.on('update item_add item_remove', resize);\n    addEvent(control, 'input', resize);\n    addEvent(control, 'keyup', resize);\n    addEvent(control, 'blur', resize);\n    addEvent(control, 'update', resize);\n  });\n}\n\n/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction no_backspace_delete () {\n  var self = this;\n  var orig_deleteSelection = self.deleteSelection;\n  this.hook('instead', 'deleteSelection', evt => {\n    if (self.activeItems.length) {\n      return orig_deleteSelection.call(self, evt);\n    }\n    return false;\n  });\n}\n\n/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction no_active_items () {\n  this.hook('instead', 'setActiveItem', () => {});\n  this.hook('instead', 'selectAll', () => {});\n}\n\n/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction optgroup_columns () {\n  var self = this;\n  var orig_keydown = self.onKeyDown;\n  self.hook('instead', 'onKeyDown', evt => {\n    var index, option, options, optgroup;\n    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n      return orig_keydown.call(self, evt);\n    }\n    self.ignoreHover = true;\n    optgroup = parentMatch(self.activeOption, '[data-group]');\n    index = nodeIndex(self.activeOption, '[data-selectable]');\n    if (!optgroup) {\n      return;\n    }\n    if (evt.keyCode === KEY_LEFT) {\n      optgroup = optgroup.previousSibling;\n    } else {\n      optgroup = optgroup.nextSibling;\n    }\n    if (!optgroup) {\n      return;\n    }\n    options = optgroup.querySelectorAll('[data-selectable]');\n    option = options[Math.min(options.length - 1, index)];\n    if (option) {\n      self.setActiveOption(option);\n    }\n  });\n}\n\n/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction remove_button (userOptions) {\n  const options = Object.assign({\n    label: '&times;',\n    title: 'Remove',\n    className: 'remove',\n    append: true\n  }, userOptions);\n\n  //options.className = 'remove-single';\n  var self = this;\n\n  // override the render method to add remove button to each item\n  if (!options.append) {\n    return;\n  }\n  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_item = self.settings.render.item;\n    self.settings.render.item = (data, escape) => {\n      var item = getDom(orig_render_item.call(self, data, escape));\n      var close_button = getDom(html);\n      item.appendChild(close_button);\n      addEvent(close_button, 'mousedown', evt => {\n        preventDefault(evt, true);\n      });\n      addEvent(close_button, 'click', evt => {\n        if (self.isLocked) return;\n\n        // propagating will trigger the dropdown to show for single mode\n        preventDefault(evt, true);\n        if (self.isLocked) return;\n        if (!self.shouldDelete([item], evt)) return;\n        self.removeItem(item);\n        self.refreshOptions(false);\n        self.inputState();\n      });\n      return item;\n    };\n  });\n}\n\n/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction restore_on_backspace (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    text: option => {\n      return option[self.settings.labelField];\n    }\n  }, userOptions);\n  self.on('item_remove', function (value) {\n    if (!self.isFocused) {\n      return;\n    }\n    if (self.control_input.value.trim() === '') {\n      var option = self.options[value];\n      if (option) {\n        self.setTextboxValue(options.text.call(self, option));\n      }\n    }\n  });\n}\n\n/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction virtual_scroll () {\n  const self = this;\n  const orig_canLoad = self.canLoad;\n  const orig_clearActiveOption = self.clearActiveOption;\n  const orig_loadCallback = self.loadCallback;\n  var pagination = {};\n  var dropdown_content;\n  var loading_more = false;\n  var load_more_opt;\n  var default_values = [];\n  if (!self.settings.shouldLoadMore) {\n    // return true if additional results should be loaded\n    self.settings.shouldLoadMore = () => {\n      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n      if (scroll_percent > 0.9) {\n        return true;\n      }\n      if (self.activeOption) {\n        var selectable = self.selectable();\n        var index = Array.from(selectable).indexOf(self.activeOption);\n        if (index >= selectable.length - 2) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  if (!self.settings.firstUrl) {\n    throw 'virtual_scroll plugin requires a firstUrl() method';\n  }\n\n  // in order for virtual scrolling to work,\n  // options need to be ordered the same way they're returned from the remote data source\n  self.settings.sortField = [{\n    field: '$order'\n  }, {\n    field: '$score'\n  }];\n\n  // can we load more results for given query?\n  const canLoadMore = query => {\n    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n      return false;\n    }\n    if (query in pagination && pagination[query]) {\n      return true;\n    }\n    return false;\n  };\n  const clearFilter = (option, value) => {\n    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n      return true;\n    }\n    return false;\n  };\n\n  // set the next url that will be\n  self.setNextUrl = (value, next_url) => {\n    pagination[value] = next_url;\n  };\n\n  // getUrl() to be used in settings.load()\n  self.getUrl = query => {\n    if (query in pagination) {\n      const next_url = pagination[query];\n      pagination[query] = false;\n      return next_url;\n    }\n\n    // if the user goes back to a previous query\n    // we need to load the first page again\n    self.clearPagination();\n    return self.settings.firstUrl.call(self, query);\n  };\n\n  // clear pagination\n  self.clearPagination = () => {\n    pagination = {};\n  };\n\n  // don't clear the active option (and cause unwanted dropdown scroll)\n  // while loading more results\n  self.hook('instead', 'clearActiveOption', () => {\n    if (loading_more) {\n      return;\n    }\n    return orig_clearActiveOption.call(self);\n  });\n\n  // override the canLoad method\n  self.hook('instead', 'canLoad', query => {\n    // first time the query has been seen\n    if (!(query in pagination)) {\n      return orig_canLoad.call(self, query);\n    }\n    return canLoadMore(query);\n  });\n\n  // wrap the load\n  self.hook('instead', 'loadCallback', (options, optgroups) => {\n    if (!loading_more) {\n      self.clearOptions(clearFilter);\n    } else if (load_more_opt) {\n      const first_option = options[0];\n      if (first_option !== undefined) {\n        load_more_opt.dataset.value = first_option[self.settings.valueField];\n      }\n    }\n    orig_loadCallback.call(self, options, optgroups);\n    loading_more = false;\n  });\n\n  // add templates to dropdown\n  //\tloading_more if we have another url in the queue\n  //\tno_more_results if we don't have another url in the queue\n  self.hook('after', 'refreshOptions', () => {\n    const query = self.lastValue;\n    var option;\n    if (canLoadMore(query)) {\n      option = self.render('loading_more', {\n        query: query\n      });\n      if (option) {\n        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n        load_more_opt = option;\n      }\n    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n      option = self.render('no_more_results', {\n        query: query\n      });\n    }\n    if (option) {\n      addClasses(option, self.settings.optionClass);\n      dropdown_content.append(option);\n    }\n  });\n\n  // add scroll listener and default templates\n  self.on('initialize', () => {\n    default_values = Object.keys(self.options);\n    dropdown_content = self.dropdown_content;\n\n    // default templates\n    self.settings.render = Object.assign({}, {\n      loading_more: () => {\n        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n      },\n      no_more_results: () => {\n        return `<div class=\"no-more-results\">No more results</div>`;\n      }\n    }, self.settings.render);\n\n    // watch dropdown content scroll position\n    dropdown_content.addEventListener('scroll', () => {\n      if (!self.settings.shouldLoadMore.call(self)) {\n        return;\n      }\n\n      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n      if (!canLoadMore(self.lastValue)) {\n        return;\n      }\n\n      // don't call load() too much\n      if (loading_more) return;\n      loading_more = true;\n      self.load.call(self, self.lastValue);\n    });\n  });\n}\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport { TomSelect as default };\n\n"],
  "mappings": "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",
  "names": ["code_points", "unicode_map", "get_field", "element", "el", "timeout", "type", "value", "input", "optgroup", "label", "UpdateChecked", "UpdateCheckbox", "escape_html"]
}
